{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\user\\\\Desktop\\\\CSC - anul 2\\\\SD\\\\SpringPractice\\\\react-demo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\user\\\\Desktop\\\\CSC - anul 2\\\\SD\\\\SpringPractice\\\\react-demo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\user\\\\Desktop\\\\CSC - anul 2\\\\SD\\\\SpringPractice\\\\react-demo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\user\\\\Desktop\\\\CSC - anul 2\\\\SD\\\\SpringPractice\\\\react-demo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\user\\\\Desktop\\\\CSC - anul 2\\\\SD\\\\SpringPractice\\\\react-demo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\user\\\\Desktop\\\\CSC - anul 2\\\\SD\\\\SpringPractice\\\\react-demo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\CSC - anul 2\\\\SD\\\\SpringPractice\\\\react-demo\\\\src\\\\doctor\\\\doctor-container.js\";\nimport React from 'react';\nimport APIResponseErrorMessage from \"../commons/errorhandling/api-response-error-message\";\nimport { Button, Card, CardHeader, Col, Container, Form, FormGroup, Input, Jumbotron, Label, Modal, ModalBody, ModalHeader, Row } from 'reactstrap';\nimport PersonForm from \"./components/person-form\";\nimport * as API_USERS from \"./api/person-api\";\nimport PersonTable from \"./components/person-table\";\nimport Home from \"../home/home\";\n\nvar DoctorContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DoctorContainer, _React$Component);\n\n  function DoctorContainer(props) {\n    var _this;\n\n    _classCallCheck(this, DoctorContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DoctorContainer).call(this, props));\n    _this.toggleForm = _this.toggleForm.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.reload = _this.reload.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      selected: false,\n      collapseForm: false,\n      tableData: [],\n      isLoaded: false,\n      errorStatus: 0,\n      error: null\n    };\n    return _this;\n  }\n\n  _createClass(DoctorContainer, [{\n    key: \"toggleForm\",\n    value: function toggleForm() {\n      this.setState({\n        selected: !this.state.selected\n      });\n    }\n  }, {\n    key: \"reload\",\n    value: function reload() {\n      this.setState({\n        isLoaded: false\n      });\n      this.toggleForm();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Jumbotron, {\n        fluid: true,\n        style: backgroundStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(Form, {\n        className: \"login-form\",\n        style: loginForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(Container, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"display-3\",\n        style: textStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Login\"), React.createElement(\"div\", {\n        className: \"message\",\n        style: validMsg,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, this.state.validMsg), React.createElement(\"div\", {\n        className: \"message\",\n        style: invalidMsg,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, this.state.invalidMsg), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Username\"), React.createElement(Input, {\n        value: this.state.username,\n        onChange: function onChange(evt) {\n          return _this2.updateUsername(evt);\n        },\n        type: \"text\",\n        name: \"username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Password\"), React.createElement(Input, {\n        value: this.state.password,\n        onChange: function onChange(evt) {\n          return _this2.updatePassword(evt);\n        },\n        type: \"password\",\n        id: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      })), React.createElement(Button, {\n        style: button,\n        onClick: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Login\"))));\n    }\n  }]);\n\n  return DoctorContainer;\n}(React.Component);\n\nexport default DoctorContainer;","map":{"version":3,"sources":["C:\\Users\\user\\Desktop\\CSC - anul 2\\SD\\SpringPractice\\react-demo\\src\\doctor\\doctor-container.js"],"names":["React","APIResponseErrorMessage","Button","Card","CardHeader","Col","Container","Form","FormGroup","Input","Jumbotron","Label","Modal","ModalBody","ModalHeader","Row","PersonForm","API_USERS","PersonTable","Home","DoctorContainer","props","toggleForm","bind","reload","state","selected","collapseForm","tableData","isLoaded","errorStatus","error","setState","backgroundStyle","loginForm","textStyle","validMsg","invalidMsg","username","evt","updateUsername","password","updatePassword","button","onSubmit","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport APIResponseErrorMessage from \"../commons/errorhandling/api-response-error-message\";\r\nimport {\r\n    Button,\r\n    Card,\r\n    CardHeader,\r\n    Col, Container, Form, FormGroup, Input, Jumbotron, Label,\r\n    Modal,\r\n    ModalBody,\r\n    ModalHeader,\r\n    Row\r\n} from 'reactstrap';\r\nimport PersonForm from \"./components/person-form\";\r\n\r\nimport * as API_USERS from \"./api/person-api\"\r\nimport PersonTable from \"./components/person-table\";\r\nimport Home from \"../home/home\";\r\n\r\n\r\n\r\nclass DoctorContainer extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.toggleForm = this.toggleForm.bind(this);\r\n        this.reload = this.reload.bind(this);\r\n        this.state = {\r\n            selected: false,\r\n            collapseForm: false,\r\n            tableData: [],\r\n            isLoaded: false,\r\n            errorStatus: 0,\r\n            error: null\r\n        };\r\n    }\r\n\r\n\r\n\r\n    toggleForm() {\r\n        this.setState({selected: !this.state.selected});\r\n    }\r\n\r\n\r\n    reload() {\r\n        this.setState({\r\n            isLoaded: false\r\n        });\r\n        this.toggleForm();\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Jumbotron fluid style={backgroundStyle}>\r\n                <Form className=\"login-form\" style={loginForm}>\r\n\r\n                    <Container fluid>\r\n                        <h1 className=\"display-3\" style={textStyle}>Login</h1>\r\n                        <div className=\"message\" style={validMsg}>{this.state.validMsg}</div>\r\n                        <div className=\"message\" style={invalidMsg}>{this.state.invalidMsg}</div>\r\n                        <FormGroup>\r\n                            <Label>Username</Label>\r\n                            <Input value={this.state.username} onChange={evt => this.updateUsername(evt)} type={\"text\"} name={\"username\"}/>\r\n                        </FormGroup>\r\n\r\n                        <FormGroup>\r\n                            <Label>Password</Label>\r\n                            <Input value={this.state.password} onChange={evt => this.updatePassword(evt)} type={\"password\"} id={\"password\"}/>\r\n                        </FormGroup>\r\n                        <Button style={button} onClick={this.onSubmit}>Login</Button>\r\n                    </Container>\r\n\r\n\r\n                </Form>\r\n            </Jumbotron>\r\n        )\r\n    };\r\n}\r\n\r\n\r\nexport default DoctorContainer;\r\n"]},"metadata":{},"sourceType":"module"}