{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\user\\\\Desktop\\\\CSC - anul 2\\\\SD\\\\SpringPractice\\\\react-demo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\user\\\\Desktop\\\\CSC - anul 2\\\\SD\\\\SpringPractice\\\\react-demo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\user\\\\Desktop\\\\CSC - anul 2\\\\SD\\\\SpringPractice\\\\react-demo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\user\\\\Desktop\\\\CSC - anul 2\\\\SD\\\\SpringPractice\\\\react-demo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\user\\\\Desktop\\\\CSC - anul 2\\\\SD\\\\SpringPractice\\\\react-demo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\CSC - anul 2\\\\SD\\\\SpringPractice\\\\react-demo\\\\src\\\\home\\\\home.js\";\nimport React from 'react';\nimport BackgroundImg from '../commons/images/future-medicine.jpg';\nimport { Button, Form, FormGroup, Label, Input, Container, Jumbotron } from 'reactstrap';\nimport { HOST } from \"../commons/hosts\";\nimport RestApiClient from \"../commons/api/rest-client\";\nimport * as API_USERS from \"../person/api/person-api\";\nvar backgroundStyle = {\n  backgroundPosition: 'center',\n  backgroundSize: 'cover',\n  backgroundRepeat: 'no-repeat',\n  width: \"100%\",\n  height: \"1920px\",\n  backgroundImage: \"url(\".concat(BackgroundImg, \")\")\n};\nvar endpoint = {\n  login: '/users'\n};\n\nvar Home =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Home, _React$Component);\n\n  function Home(props) {\n    _classCallCheck(this, Home);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Home).call(this, props));\n    /*\r\n            this.state = {\r\n                  errorStatus: 0,\r\n                error: null,\r\n                username: '',\r\n                password: '',\r\n                validMsg: '',\r\n                invalidMsg: ''\r\n            };\r\n              this.updateUsername = this.updateUsername.bind(this);\r\n            this.updatePassword = this.updatePassword.bind(this);\r\n            this.updateMsgGood = this.updateMsgGood.bind(this);\r\n            this.updateMsgBad = this.updateMsgBad.bind(this);\r\n            this.onSubmit = this.onSubmit.bind(this);*/\n  }\n\n  _createClass(Home, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Jumbotron, {\n        fluid: true,\n        style: backgroundStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Home;\n}(React.Component);\n\nexport default Home;","map":{"version":3,"sources":["C:\\Users\\user\\Desktop\\CSC - anul 2\\SD\\SpringPractice\\react-demo\\src\\home\\home.js"],"names":["React","BackgroundImg","Button","Form","FormGroup","Label","Input","Container","Jumbotron","HOST","RestApiClient","API_USERS","backgroundStyle","backgroundPosition","backgroundSize","backgroundRepeat","width","height","backgroundImage","endpoint","login","Home","props","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,uCAA1B;AAEA,SAAQC,MAAR,EAAgBC,IAAhB,EAAsBC,SAAtB,EAAiCC,KAAjC,EAAwCC,KAAxC,EAA+CC,SAA/C,EAA0DC,SAA1D,QAA0E,YAA1E;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAO,KAAKC,SAAZ,MAA2B,0BAA3B;AAEA,IAAMC,eAAe,GAAG;AACpBC,EAAAA,kBAAkB,EAAE,QADA;AAEpBC,EAAAA,cAAc,EAAE,OAFI;AAGpBC,EAAAA,gBAAgB,EAAE,WAHE;AAIpBC,EAAAA,KAAK,EAAE,MAJa;AAKpBC,EAAAA,MAAM,EAAE,QALY;AAMpBC,EAAAA,eAAe,gBAASjB,aAAT;AANK,CAAxB;AASA,IAAMkB,QAAQ,GAAG;AACbC,EAAAA,KAAK,EAAE;AADM,CAAjB;;IAKMC,I;;;;;AAGF,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA,6EACTA,KADS;AAEf;;;;;;;;;;;;;;AAgBH;;;;6BAGQ;AAEL,aACI,oBAAC,SAAD;AAAW,QAAA,KAAK,MAAhB;AAAiB,QAAA,KAAK,EAAEV,eAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAKH;;;;EA/BcZ,KAAK,CAACuB,S;;AAmGzB,eAAeF,IAAf","sourcesContent":["import React from 'react';\r\nimport BackgroundImg from '../commons/images/future-medicine.jpg';\r\n\r\nimport {Button, Form, FormGroup, Label, Input, Container, Jumbotron} from 'reactstrap';\r\nimport {HOST} from \"../commons/hosts\";\r\nimport RestApiClient from \"../commons/api/rest-client\";\r\nimport * as API_USERS from \"../person/api/person-api\";\r\n\r\nconst backgroundStyle = {\r\n    backgroundPosition: 'center',\r\n    backgroundSize: 'cover',\r\n    backgroundRepeat: 'no-repeat',\r\n    width: \"100%\",\r\n    height: \"1920px\",\r\n    backgroundImage: `url(${BackgroundImg})`\r\n};\r\n\r\nconst endpoint = {\r\n    login: '/users'\r\n};\r\n\r\n\r\nclass Home extends React.Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        /*\r\n                this.state = {\r\n\r\n                    errorStatus: 0,\r\n                    error: null,\r\n                    username: '',\r\n                    password: '',\r\n                    validMsg: '',\r\n                    invalidMsg: ''\r\n                };\r\n\r\n                this.updateUsername = this.updateUsername.bind(this);\r\n                this.updatePassword = this.updatePassword.bind(this);\r\n                this.updateMsgGood = this.updateMsgGood.bind(this);\r\n                this.updateMsgBad = this.updateMsgBad.bind(this);\r\n                this.onSubmit = this.onSubmit.bind(this);*/\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Jumbotron fluid style={backgroundStyle}>\r\n\r\n            </Jumbotron>\r\n        )\r\n    };\r\n\r\n    /*\r\n        updateUsername(evt) {\r\n            this.setState({\r\n                username: evt.target.value\r\n            });\r\n        }\r\n\r\n        updatePassword(evt) {\r\n            this.setState({\r\n                password: evt.target.value\r\n            });\r\n        }\r\n\r\n        updateMsgGood(evt) {\r\n            this.setState({\r\n                validMsg: \"Login successfull!\",\r\n                invalidMsg: \"\"\r\n            });\r\n        }\r\n\r\n        updateMsgBad(evt) {\r\n            this.setState({\r\n                invalidMsg: \"Invalid username or password!\",\r\n                validMsg: \"\"\r\n            });\r\n        }\r\n\r\n        onSubmit(){\r\n            let login = {\r\n                username: this.state.username,\r\n                password: this.state.password\r\n            };\r\n            this.checkLogin(login);\r\n        }\r\n\r\n\r\n        checkLogin(login){\r\n\r\n            return this.sendRequest(login, (result, status, err) => {\r\n                console.log(status);\r\n                console.log(\"Result = \" + result);\r\n                if (result !== null && (status === 200 || status === 201)) {\r\n                    this.updateMsgGood();\r\n                } else {\r\n                    console.log(\"There was an error \" + err);\r\n                    this.updateMsgBad();\r\n                }\r\n            });\r\n        }\r\n\r\n        sendRequest(login, callback){\r\n            let request = new Request(HOST.backend_api + endpoint.login + \"/login\", {\r\n                method: 'POST',\r\n                headers : {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(login)\r\n            });\r\n            console.log(request.url);\r\n            console.log(login);\r\n            RestApiClient.performRequest(request, callback, login);\r\n        }\r\n    }\r\n    */\r\n}\r\nexport default Home\r\n"]},"metadata":{},"sourceType":"module"}