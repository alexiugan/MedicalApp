{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\user\\\\Desktop\\\\CSC - anul 2\\\\SD\\\\SpringPractice\\\\med-app-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\user\\\\Desktop\\\\CSC - anul 2\\\\SD\\\\SpringPractice\\\\med-app-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\user\\\\Desktop\\\\CSC - anul 2\\\\SD\\\\SpringPractice\\\\med-app-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\user\\\\Desktop\\\\CSC - anul 2\\\\SD\\\\SpringPractice\\\\med-app-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\user\\\\Desktop\\\\CSC - anul 2\\\\SD\\\\SpringPractice\\\\med-app-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\user\\\\Desktop\\\\CSC - anul 2\\\\SD\\\\SpringPractice\\\\med-app-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\CSC - anul 2\\\\SD\\\\SpringPractice\\\\med-app-frontend\\\\src\\\\medication\\\\medication-container.js\";\nimport React from 'react';\nimport APIResponseErrorMessage from \"../commons/errorhandling/api-response-error-message\";\nimport { Button, Card, CardHeader, Col, Modal, ModalBody, ModalHeader, Row } from 'reactstrap';\nimport MedicationForm from \"./medication-form\";\nimport * as API_USERS from \"./medication-api\";\nimport MedicationTable from \"./medication-table\";\nimport PatientRemoveForm from \"../patient/components/parient-remove-form\";\nimport PatientUpdateForm from \"../patient/components/patient-update-form\";\nimport MedicationRemoveForm from \"./medication-remove-form\";\nimport MedicationUpdateForm from \"./medication-update-form\";\nvar buttonStyle = {\n  marginLeft: \"10px\"\n};\n\nvar MedicationContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MedicationContainer, _React$Component);\n\n  function MedicationContainer(props) {\n    var _this;\n\n    _classCallCheck(this, MedicationContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MedicationContainer).call(this, props));\n    _this.toggleForm = _this.toggleForm.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.toggleRemove = _this.toggleRemove.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.toggleUpdate = _this.toggleUpdate.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.reload = _this.reload.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      removeMedication: false,\n      updateMedication: false,\n      selected: false,\n      collapseForm: false,\n      tableData: [],\n      isLoaded: false,\n      errorStatus: 0,\n      error: null\n    };\n    return _this;\n  }\n\n  _createClass(MedicationContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchMedications();\n    }\n  }, {\n    key: \"fetchMedications\",\n    value: function fetchMedications() {\n      var _this2 = this;\n\n      return API_USERS.getMedications(function (result, status, err) {\n        if (result !== null && status === 200) {\n          _this2.setState({\n            tableData: result,\n            isLoaded: true\n          });\n        } else {\n          _this2.setState({\n            errorStatus: status,\n            error: err\n          });\n        }\n      });\n    }\n  }, {\n    key: \"toggleForm\",\n    value: function toggleForm() {\n      this.setState({\n        selected: !this.state.selected\n      });\n    }\n  }, {\n    key: \"toggleRemove\",\n    value: function toggleRemove() {\n      this.setState({\n        removeMedication: !this.state.removeMedication\n      });\n    }\n  }, {\n    key: \"toggleUpdate\",\n    value: function toggleUpdate() {\n      this.setState({\n        updateMedication: !this.state.updateMedication\n      });\n    }\n  }, {\n    key: \"reload\",\n    value: function reload() {\n      this.setState({\n        isLoaded: false\n      });\n      this.setState({\n        selected: false,\n        removeMedication: false,\n        updateMedication: false\n      });\n      this.fetchMedications();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var data = localStorage.getItem(\"role\");\n\n      if (data === \"0\" || data === \"1\") {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, React.createElement(CardHeader, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, \" Medication Management \")), React.createElement(Card, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }), React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, React.createElement(Col, {\n          sm: {\n            size: '8',\n            offset: 1\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, React.createElement(Button, {\n          color: \"primary\",\n          onClick: this.toggleForm,\n          style: buttonStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, \"Add Medication \"), React.createElement(Button, {\n          color: \"primary\",\n          onClick: this.toggleRemove,\n          style: buttonStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, \"Remove Medication \"), React.createElement(Button, {\n          color: \"primary\",\n          onClick: this.toggleUpdate,\n          style: buttonStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, \"Update Medication \"))), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }), React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, React.createElement(Col, {\n          sm: {\n            size: '8',\n            offset: 1\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, this.state.isLoaded && React.createElement(MedicationTable, {\n          tableData: this.state.tableData,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }), this.state.errorStatus > 0 && React.createElement(APIResponseErrorMessage, {\n          errorStatus: this.state.errorStatus,\n          error: this.state.error,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        })))), React.createElement(Modal, {\n          isOpen: this.state.selected,\n          toggle: this.toggleForm,\n          className: this.props.className,\n          size: \"lg\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, React.createElement(ModalHeader, {\n          toggle: this.toggleForm,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, \" Add Patient: \"), React.createElement(ModalBody, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, React.createElement(MedicationForm, {\n          reloadHandler: this.reload,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }))), React.createElement(Modal, {\n          isOpen: this.state.removeMedication,\n          toggle: this.toggleRemove,\n          className: this.props.className,\n          size: \"lg\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }, React.createElement(ModalHeader, {\n          toggle: this.toggleRemove,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          },\n          __self: this\n        }, \" Remove Medication: \"), React.createElement(ModalBody, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        }, React.createElement(MedicationRemoveForm, {\n          reloadHandler: this.reload,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }))), React.createElement(Modal, {\n          isOpen: this.state.updateMedication,\n          toggle: this.toggleUpdate,\n          className: this.props.className,\n          size: \"lg\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        }, React.createElement(ModalHeader, {\n          toggle: this.toggleUpdate,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }, \" Update Medication: \"), React.createElement(ModalBody, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          },\n          __self: this\n        }, React.createElement(MedicationUpdateForm, {\n          reloadHandler: this.reload,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        }))));\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149\n          },\n          __self: this\n        }, React.createElement(CardHeader, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150\n          },\n          __self: this\n        }, React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151\n          },\n          __self: this\n        }, \" Medication Management \")), React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153\n          },\n          __self: this\n        }, \"Access not allowed!\"));\n      }\n    }\n  }]);\n\n  return MedicationContainer;\n}(React.Component);\n\nexport default MedicationContainer;","map":{"version":3,"sources":["C:\\Users\\user\\Desktop\\CSC - anul 2\\SD\\SpringPractice\\med-app-frontend\\src\\medication\\medication-container.js"],"names":["React","APIResponseErrorMessage","Button","Card","CardHeader","Col","Modal","ModalBody","ModalHeader","Row","MedicationForm","API_USERS","MedicationTable","PatientRemoveForm","PatientUpdateForm","MedicationRemoveForm","MedicationUpdateForm","buttonStyle","marginLeft","MedicationContainer","props","toggleForm","bind","toggleRemove","toggleUpdate","reload","state","removeMedication","updateMedication","selected","collapseForm","tableData","isLoaded","errorStatus","error","fetchMedications","getMedications","result","status","err","setState","data","localStorage","getItem","size","offset","className","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,uBAAP,MAAoC,qDAApC;AACA,SACIC,MADJ,EAEIC,IAFJ,EAGIC,UAHJ,EAIIC,GAJJ,EAKIC,KALJ,EAMIC,SANJ,EAOIC,WAPJ,EAQIC,GARJ,QASO,YATP;AAUA,OAAOC,cAAP,MAA2B,mBAA3B;AAEA,OAAO,KAAKC,SAAZ,MAA2B,kBAA3B;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AACA,OAAOC,iBAAP,MAA8B,2CAA9B;AACA,OAAOC,iBAAP,MAA8B,2CAA9B;AACA,OAAOC,oBAAP,MAAiC,0BAAjC;AACA,OAAOC,oBAAP,MAAiC,0BAAjC;AAGA,IAAMC,WAAW,GAAG;AAChBC,EAAAA,UAAU,EAAC;AADK,CAApB;;IAIMC,mB;;;;;AAEF,+BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,6FAAMA,KAAN;AACA,UAAKC,UAAL,GAAkB,MAAKA,UAAL,CAAgBC,IAAhB,uDAAlB;AACA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBD,IAAlB,uDAApB;AACA,UAAKE,YAAL,GAAoB,MAAKA,YAAL,CAAkBF,IAAlB,uDAApB;AACA,UAAKG,MAAL,GAAc,MAAKA,MAAL,CAAYH,IAAZ,uDAAd;AACA,UAAKI,KAAL,GAAa;AACTC,MAAAA,gBAAgB,EAAE,KADT;AAETC,MAAAA,gBAAgB,EAAE,KAFT;AAGTC,MAAAA,QAAQ,EAAE,KAHD;AAITC,MAAAA,YAAY,EAAE,KAJL;AAKTC,MAAAA,SAAS,EAAE,EALF;AAMTC,MAAAA,QAAQ,EAAE,KAND;AAOTC,MAAAA,WAAW,EAAE,CAPJ;AAQTC,MAAAA,KAAK,EAAE;AARE,KAAb;AANe;AAgBlB;;;;wCAEmB;AAChB,WAAKC,gBAAL;AACH;;;uCAEkB;AAAA;;AACf,aAAOxB,SAAS,CAACyB,cAAV,CAAyB,UAACC,MAAD,EAASC,MAAT,EAAiBC,GAAjB,EAAyB;AAErD,YAAIF,MAAM,KAAK,IAAX,IAAmBC,MAAM,KAAK,GAAlC,EAAuC;AACnC,UAAA,MAAI,CAACE,QAAL,CAAc;AACVT,YAAAA,SAAS,EAAEM,MADD;AAEVL,YAAAA,QAAQ,EAAE;AAFA,WAAd;AAIH,SALD,MAKO;AACH,UAAA,MAAI,CAACQ,QAAL,CAAe;AACXP,YAAAA,WAAW,EAAEK,MADF;AAEXJ,YAAAA,KAAK,EAAEK;AAFI,WAAf;AAIH;AACJ,OAbM,CAAP;AAcH;;;iCAEY;AACT,WAAKC,QAAL,CAAc;AAACX,QAAAA,QAAQ,EAAE,CAAC,KAAKH,KAAL,CAAWG;AAAvB,OAAd;AACH;;;mCAEc;AACX,WAAKW,QAAL,CAAc;AAACb,QAAAA,gBAAgB,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAA/B,OAAd;AACH;;;mCAEc;AACX,WAAKa,QAAL,CAAc;AAACZ,QAAAA,gBAAgB,EAAE,CAAC,KAAKF,KAAL,CAAWE;AAA/B,OAAd;AACH;;;6BAEQ;AACL,WAAKY,QAAL,CAAc;AACVR,QAAAA,QAAQ,EAAE;AADA,OAAd;AAGA,WAAKQ,QAAL,CAAc;AACVX,QAAAA,QAAQ,EAAE,KADA;AAEVF,QAAAA,gBAAgB,EAAE,KAFR;AAGVC,QAAAA,gBAAgB,EAAE;AAHR,OAAd;AAKA,WAAKO,gBAAL;AACH;;;6BAEQ;AACL,UAAIM,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX;;AACA,UAAGF,IAAI,KAAK,GAAT,IAAgBA,IAAI,KAAK,GAA5B,EAAgC;AAC5B,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADJ,CADJ,EAII,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,EAEI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,GAAD;AAAK,UAAA,EAAE,EAAE;AAACG,YAAAA,IAAI,EAAE,GAAP;AAAYC,YAAAA,MAAM,EAAE;AAApB,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,SAAd;AAAwB,UAAA,OAAO,EAAE,KAAKxB,UAAtC;AAAkD,UAAA,KAAK,EAAEJ,WAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,EAEI,oBAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,SAAd;AAAwB,UAAA,OAAO,EAAE,KAAKM,YAAtC;AAAoD,UAAA,KAAK,EAAEN,WAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAFJ,EAGI,oBAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,SAAd;AAAwB,UAAA,OAAO,EAAE,KAAKO,YAAtC;AAAoD,UAAA,KAAK,EAAEP,WAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAHJ,CADJ,CAFJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UATJ,EAUI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,GAAD;AAAK,UAAA,EAAE,EAAE;AAAC2B,YAAAA,IAAI,EAAE,GAAP;AAAYC,YAAAA,MAAM,EAAE;AAApB,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACK,KAAKnB,KAAL,CAAWM,QAAX,IAAuB,oBAAC,eAAD;AAAiB,UAAA,SAAS,EAAI,KAAKN,KAAL,CAAWK,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAD5B,EAEK,KAAKL,KAAL,CAAWO,WAAX,GAAyB,CAAzB,IAA8B,oBAAC,uBAAD;AAC3B,UAAA,WAAW,EAAE,KAAKP,KAAL,CAAWO,WADG;AAE3B,UAAA,KAAK,EAAE,KAAKP,KAAL,CAAWQ,KAFS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFnC,CADJ,CAVJ,CAJJ,EAyBI,oBAAC,KAAD;AAAO,UAAA,MAAM,EAAE,KAAKR,KAAL,CAAWG,QAA1B;AAAoC,UAAA,MAAM,EAAE,KAAKR,UAAjD;AACO,UAAA,SAAS,EAAE,KAAKD,KAAL,CAAW0B,SAD7B;AACwC,UAAA,IAAI,EAAC,IAD7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEI,oBAAC,WAAD;AAAa,UAAA,MAAM,EAAE,KAAKzB,UAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFJ,EAGI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,cAAD;AAAgB,UAAA,aAAa,EAAE,KAAKI,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CAHJ,CAzBJ,EAiCI,oBAAC,KAAD;AAAO,UAAA,MAAM,EAAE,KAAKC,KAAL,CAAWC,gBAA1B;AAA4C,UAAA,MAAM,EAAE,KAAKJ,YAAzD;AACO,UAAA,SAAS,EAAE,KAAKH,KAAL,CAAW0B,SAD7B;AACwC,UAAA,IAAI,EAAC,IAD7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEI,oBAAC,WAAD;AAAa,UAAA,MAAM,EAAE,KAAKvB,YAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAFJ,EAGI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,oBAAD;AAAsB,UAAA,aAAa,EAAE,KAAKE,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CAHJ,CAjCJ,EAyCI,oBAAC,KAAD;AAAO,UAAA,MAAM,EAAE,KAAKC,KAAL,CAAWE,gBAA1B;AAA4C,UAAA,MAAM,EAAE,KAAKJ,YAAzD;AACO,UAAA,SAAS,EAAE,KAAKJ,KAAL,CAAW0B,SAD7B;AACwC,UAAA,IAAI,EAAC,IAD7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEI,oBAAC,WAAD;AAAa,UAAA,MAAM,EAAE,KAAKtB,YAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAFJ,EAGI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,oBAAD;AAAsB,UAAA,aAAa,EAAE,KAAKC,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CAHJ,CAzCJ,CADJ;AAmDE,OApDN,MAqDI;AACA,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADJ,CADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAJJ,CADJ;AAQH;AACJ;;;;EAlI6BzB,KAAK,CAAC+C,S;;AAsIxC,eAAe5B,mBAAf","sourcesContent":["import React from 'react';\r\nimport APIResponseErrorMessage from \"../commons/errorhandling/api-response-error-message\";\r\nimport {\r\n    Button,\r\n    Card,\r\n    CardHeader,\r\n    Col,\r\n    Modal,\r\n    ModalBody,\r\n    ModalHeader,\r\n    Row\r\n} from 'reactstrap';\r\nimport MedicationForm from \"./medication-form\";\r\n\r\nimport * as API_USERS from \"./medication-api\"\r\nimport MedicationTable from \"./medication-table\";\r\nimport PatientRemoveForm from \"../patient/components/parient-remove-form\";\r\nimport PatientUpdateForm from \"../patient/components/patient-update-form\";\r\nimport MedicationRemoveForm from \"./medication-remove-form\";\r\nimport MedicationUpdateForm from \"./medication-update-form\";\r\n\r\n\r\nconst buttonStyle = {\r\n    marginLeft:\"10px\"\r\n};\r\n\r\nclass MedicationContainer extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.toggleForm = this.toggleForm.bind(this);\r\n        this.toggleRemove = this.toggleRemove.bind(this);\r\n        this.toggleUpdate = this.toggleUpdate.bind(this);\r\n        this.reload = this.reload.bind(this);\r\n        this.state = {\r\n            removeMedication: false,\r\n            updateMedication: false,\r\n            selected: false,\r\n            collapseForm: false,\r\n            tableData: [],\r\n            isLoaded: false,\r\n            errorStatus: 0,\r\n            error: null\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchMedications();\r\n    }\r\n\r\n    fetchMedications() {\r\n        return API_USERS.getMedications((result, status, err) => {\r\n\r\n            if (result !== null && status === 200) {\r\n                this.setState({\r\n                    tableData: result,\r\n                    isLoaded: true\r\n                });\r\n            } else {\r\n                this.setState(({\r\n                    errorStatus: status,\r\n                    error: err\r\n                }));\r\n            }\r\n        });\r\n    }\r\n\r\n    toggleForm() {\r\n        this.setState({selected: !this.state.selected});\r\n    }\r\n\r\n    toggleRemove() {\r\n        this.setState({removeMedication: !this.state.removeMedication});\r\n    }\r\n\r\n    toggleUpdate() {\r\n        this.setState({updateMedication: !this.state.updateMedication});\r\n    }\r\n\r\n    reload() {\r\n        this.setState({\r\n            isLoaded: false\r\n        });\r\n        this.setState({\r\n            selected: false,\r\n            removeMedication: false,\r\n            updateMedication: false\r\n        });\r\n        this.fetchMedications();\r\n    }\r\n\r\n    render() {\r\n        let data = localStorage.getItem(\"role\");\r\n        if(data === \"0\" || data === \"1\"){\r\n            return (\r\n                <div>\r\n                    <CardHeader>\r\n                        <strong> Medication Management </strong>\r\n                    </CardHeader>\r\n                    <Card>\r\n                        <br/>\r\n                        <Row>\r\n                            <Col sm={{size: '8', offset: 1}}>\r\n                                <Button color=\"primary\" onClick={this.toggleForm} style={buttonStyle}>Add Medication </Button>\r\n                                <Button color=\"primary\" onClick={this.toggleRemove} style={buttonStyle}>Remove Medication </Button>\r\n                                <Button color=\"primary\" onClick={this.toggleUpdate} style={buttonStyle}>Update Medication </Button>\r\n                            </Col>\r\n                        </Row>\r\n                        <br/>\r\n                        <Row>\r\n                            <Col sm={{size: '8', offset: 1}}>\r\n                                {this.state.isLoaded && <MedicationTable tableData = {this.state.tableData}/>}\r\n                                {this.state.errorStatus > 0 && <APIResponseErrorMessage\r\n                                    errorStatus={this.state.errorStatus}\r\n                                    error={this.state.error}\r\n                                />   }\r\n                            </Col>\r\n                        </Row>\r\n                    </Card>\r\n\r\n                    <Modal isOpen={this.state.selected} toggle={this.toggleForm}\r\n                           className={this.props.className} size=\"lg\">\r\n                        <ModalHeader toggle={this.toggleForm}> Add Patient: </ModalHeader>\r\n                        <ModalBody>\r\n                            <MedicationForm reloadHandler={this.reload}/>\r\n                        </ModalBody>\r\n                    </Modal>\r\n\r\n                    <Modal isOpen={this.state.removeMedication} toggle={this.toggleRemove}\r\n                           className={this.props.className} size=\"lg\">\r\n                        <ModalHeader toggle={this.toggleRemove}> Remove Medication: </ModalHeader>\r\n                        <ModalBody>\r\n                            <MedicationRemoveForm reloadHandler={this.reload}/>\r\n                        </ModalBody>\r\n                    </Modal>\r\n\r\n                    <Modal isOpen={this.state.updateMedication} toggle={this.toggleUpdate}\r\n                           className={this.props.className} size=\"lg\">\r\n                        <ModalHeader toggle={this.toggleUpdate}> Update Medication: </ModalHeader>\r\n                        <ModalBody>\r\n                            <MedicationUpdateForm reloadHandler={this.reload}/>\r\n                        </ModalBody>\r\n                    </Modal>\r\n\r\n                </div>\r\n            )}\r\n        else{\r\n            return (\r\n                <div>\r\n                    <CardHeader>\r\n                        <strong> Medication Management </strong>\r\n                    </CardHeader>\r\n                    <h1>Access not allowed!</h1>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default MedicationContainer;\r\n"]},"metadata":{},"sourceType":"module"}