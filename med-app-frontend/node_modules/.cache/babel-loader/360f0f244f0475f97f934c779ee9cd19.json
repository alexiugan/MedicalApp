{"ast":null,"code":"import { HOST } from '../commons/hosts';\nimport RestApiClient from \"../commons/api/rest-client\";\nvar endpoint = {\n  medication: '/medication'\n};\n\nfunction getMedications(callback) {\n  var request = new Request(HOST.backend_api + endpoint.medication, {\n    method: 'GET'\n  });\n  console.log(request.url);\n  RestApiClient.performRequest(request, callback);\n}\n\nfunction postMedication(medication, callback) {\n  var request = new Request(HOST.backend_api + endpoint.medication + \"/save\", {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(medication)\n  });\n  console.log(\"URL: \" + request.url);\n  RestApiClient.performRequest(request, callback);\n}\n\nfunction updateMedication(medication, callback) {\n  var request = new Request(HOST.backend_api + endpoint.medication + \"/update-med\", {\n    method: 'PUT',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(medication)\n  });\n  console.log(\"URL: \" + request.url);\n  RestApiClient.performRequest(request, callback);\n}\n\nfunction deleteMedication(medication, callback) {\n  var name = \"\";\n\n  for (var i = 0; i < medication.length; i++) {\n    if (medication.charAt(i) === ' ') name += '-';else name += medication.charAt(i);\n  }\n\n  var request = new Request(HOST.backend_api + endpoint.medication + \"/del-by-name/\" + name, {\n    method: 'DELETE'\n  });\n  console.log(request.url);\n  RestApiClient.performRequest(request, callback);\n}\n\nexport { getMedications, postMedication, deleteMedication, updateMedication };","map":{"version":3,"sources":["C:\\Users\\user\\Desktop\\CSC - anul 2\\SD\\SpringPractice\\med-app-frontend\\src\\medication\\medication-api.js"],"names":["HOST","RestApiClient","endpoint","medication","getMedications","callback","request","Request","backend_api","method","console","log","url","performRequest","postMedication","headers","body","JSON","stringify","updateMedication","deleteMedication","name","i","length","charAt"],"mappings":"AAAA,SAAQA,IAAR,QAAmB,kBAAnB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AAGA,IAAMC,QAAQ,GAAG;AACbC,EAAAA,UAAU,EAAE;AADC,CAAjB;;AAIA,SAASC,cAAT,CAAwBC,QAAxB,EAAkC;AAC9B,MAAIC,OAAO,GAAG,IAAIC,OAAJ,CAAYP,IAAI,CAACQ,WAAL,GAAmBN,QAAQ,CAACC,UAAxC,EAAoD;AAC9DM,IAAAA,MAAM,EAAE;AADsD,GAApD,CAAd;AAGAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,OAAO,CAACM,GAApB;AACAX,EAAAA,aAAa,CAACY,cAAd,CAA6BP,OAA7B,EAAsCD,QAAtC;AACH;;AAID,SAASS,cAAT,CAAwBX,UAAxB,EAAoCE,QAApC,EAA6C;AACzC,MAAIC,OAAO,GAAG,IAAIC,OAAJ,CAAYP,IAAI,CAACQ,WAAL,GAAmBN,QAAQ,CAACC,UAA5B,GAAyC,OAArD,EAA+D;AACzEM,IAAAA,MAAM,EAAE,MADiE;AAEzEM,IAAAA,OAAO,EAAG;AACN,gBAAU,kBADJ;AAEN,sBAAgB;AAFV,KAF+D;AAMzEC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAef,UAAf;AANmE,GAA/D,CAAd;AASAO,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAUL,OAAO,CAACM,GAA9B;AACAX,EAAAA,aAAa,CAACY,cAAd,CAA6BP,OAA7B,EAAsCD,QAAtC;AAEH;;AAED,SAASc,gBAAT,CAA0BhB,UAA1B,EAAsCE,QAAtC,EAA+C;AAC3C,MAAIC,OAAO,GAAG,IAAIC,OAAJ,CAAYP,IAAI,CAACQ,WAAL,GAAmBN,QAAQ,CAACC,UAA5B,GAAyC,aAArD,EAAqE;AAC/EM,IAAAA,MAAM,EAAE,KADuE;AAE/EM,IAAAA,OAAO,EAAG;AACN,gBAAU,kBADJ;AAEN,sBAAgB;AAFV,KAFqE;AAM/EC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAef,UAAf;AANyE,GAArE,CAAd;AASAO,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAUL,OAAO,CAACM,GAA9B;AACAX,EAAAA,aAAa,CAACY,cAAd,CAA6BP,OAA7B,EAAsCD,QAAtC;AAEH;;AAED,SAASe,gBAAT,CAA0BjB,UAA1B,EAAsCE,QAAtC,EAAgD;AAE5C,MAAIgB,IAAI,GAAE,EAAV;;AACA,OAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAACnB,UAAU,CAACoB,MAA5B,EAAmCD,CAAC,EAApC,EAAwC;AACpC,QAAGnB,UAAU,CAACqB,MAAX,CAAkBF,CAAlB,MAAyB,GAA5B,EACID,IAAI,IAAI,GAAR,CADJ,KAGIA,IAAI,IAAIlB,UAAU,CAACqB,MAAX,CAAkBF,CAAlB,CAAR;AAEP;;AAED,MAAIhB,OAAO,GAAG,IAAIC,OAAJ,CAAYP,IAAI,CAACQ,WAAL,GAAmBN,QAAQ,CAACC,UAA5B,GAAyC,eAAzC,GAA2DkB,IAAvE,EAA6E;AACvFZ,IAAAA,MAAM,EAAE;AAD+E,GAA7E,CAAd;AAGAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,OAAO,CAACM,GAApB;AACAX,EAAAA,aAAa,CAACY,cAAd,CAA6BP,OAA7B,EAAsCD,QAAtC;AACH;;AAED,SACID,cADJ,EAEIU,cAFJ,EAGIM,gBAHJ,EAIID,gBAJJ","sourcesContent":["import {HOST} from '../commons/hosts';\r\nimport RestApiClient from \"../commons/api/rest-client\";\r\n\r\n\r\nconst endpoint = {\r\n    medication: '/medication'\r\n};\r\n\r\nfunction getMedications(callback) {\r\n    let request = new Request(HOST.backend_api + endpoint.medication, {\r\n        method: 'GET',\r\n    });\r\n    console.log(request.url);\r\n    RestApiClient.performRequest(request, callback);\r\n}\r\n\r\n\r\n\r\nfunction postMedication(medication, callback){\r\n    let request = new Request(HOST.backend_api + endpoint.medication + \"/save\" , {\r\n        method: 'POST',\r\n        headers : {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(medication)\r\n    });\r\n\r\n    console.log(\"URL: \" + request.url);\r\n    RestApiClient.performRequest(request, callback);\r\n\r\n}\r\n\r\nfunction updateMedication(medication, callback){\r\n    let request = new Request(HOST.backend_api + endpoint.medication + \"/update-med\" , {\r\n        method: 'PUT',\r\n        headers : { \r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(medication)\r\n    });\r\n\r\n    console.log(\"URL: \" + request.url);\r\n    RestApiClient.performRequest(request, callback);\r\n\r\n}\r\n\r\nfunction deleteMedication(medication, callback) {\r\n\r\n    let name= \"\";\r\n    for(let i = 0; i<medication.length;i++) {\r\n        if(medication.charAt(i) === ' ')\r\n            name += '-';\r\n        else\r\n            name += medication.charAt(i);\r\n\r\n    }\r\n\r\n    let request = new Request(HOST.backend_api + endpoint.medication + \"/del-by-name/\" + name, {\r\n        method: 'DELETE'\r\n    });\r\n    console.log(request.url);\r\n    RestApiClient.performRequest(request, callback);\r\n}\r\n\r\nexport {\r\n    getMedications,\r\n    postMedication,\r\n    deleteMedication,\r\n    updateMedication\r\n};\r\n"]},"metadata":{},"sourceType":"module"}