{"ast":null,"code":"function performRequest(request, callback, err) {\n  fetch(request).then(function (response) {\n    if (response.ok) {\n      response.json().then(function (json) {\n        return callback(json, response.status, null);\n      });\n    } else {\n      response.json().then(function (err) {\n        return callback(null, response.status, err);\n      });\n    }\n  }).catch(function (err) {\n    //catch any other unexpected error, and set custom code for error = 1\n    callback(null, 1, err);\n  });\n}\n\nmodule.exports = {\n  performRequest: performRequest\n};","map":{"version":3,"sources":["C:\\Users\\user\\Desktop\\CSC - anul 2\\SD\\SpringPractice\\react-demo\\src\\commons\\api\\rest-client.js"],"names":["performRequest","request","callback","err","fetch","then","response","ok","json","status","catch","module","exports"],"mappings":"AAAA,SAASA,cAAT,CAAwBC,OAAxB,EAAiCC,QAAjC,EAA2CC,GAA3C,EAA+C;AAE3CC,EAAAA,KAAK,CAACH,OAAD,CAAL,CACKI,IADL,CAEQ,UAASC,QAAT,EAAmB;AACf,QAAIA,QAAQ,CAACC,EAAb,EAAiB;AACbD,MAAAA,QAAQ,CAACE,IAAT,GAAgBH,IAAhB,CAAqB,UAAAG,IAAI;AAAA,eAAIN,QAAQ,CAACM,IAAD,EAAOF,QAAQ,CAACG,MAAhB,EAAuB,IAAvB,CAAZ;AAAA,OAAzB;AACH,KAFD,MAGK;AACDH,MAAAA,QAAQ,CAACE,IAAT,GAAgBH,IAAhB,CAAqB,UAAAF,GAAG;AAAA,eAAID,QAAQ,CAAC,IAAD,EAAOI,QAAQ,CAACG,MAAhB,EAAyBN,GAAzB,CAAZ;AAAA,OAAxB;AACH;AACJ,GATT,EAUKO,KAVL,CAUW,UAAUP,GAAV,EAAe;AAClB;AACAD,IAAAA,QAAQ,CAAC,IAAD,EAAO,CAAP,EAAUC,GAAV,CAAR;AACH,GAbL;AAeH;;AACDQ,MAAM,CAACC,OAAP,GAAiB;AACbZ,EAAAA,cAAc,EAAdA;AADa,CAAjB","sourcesContent":["function performRequest(request, callback, err){\r\n\r\n    fetch(request)\r\n        .then(\r\n            function(response) {\r\n                if (response.ok) {\r\n                    response.json().then(json => callback(json, response.status,null));\r\n                }\r\n                else {\r\n                    response.json().then(err => callback(null, response.status,  err));\r\n                }\r\n            })\r\n        .catch(function (err) {\r\n            //catch any other unexpected error, and set custom code for error = 1\r\n            callback(null, 1, err)\r\n        });\r\n\r\n}\r\nmodule.exports = {\r\n    performRequest\r\n};\r\n"]},"metadata":{},"sourceType":"module"}