{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\user\\\\Desktop\\\\CSC - anul 2\\\\SD\\\\SpringPractice\\\\react-demo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\user\\\\Desktop\\\\CSC - anul 2\\\\SD\\\\SpringPractice\\\\react-demo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\user\\\\Desktop\\\\CSC - anul 2\\\\SD\\\\SpringPractice\\\\react-demo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\user\\\\Desktop\\\\CSC - anul 2\\\\SD\\\\SpringPractice\\\\react-demo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\user\\\\Desktop\\\\CSC - anul 2\\\\SD\\\\SpringPractice\\\\react-demo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\user\\\\Desktop\\\\CSC - anul 2\\\\SD\\\\SpringPractice\\\\react-demo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\CSC - anul 2\\\\SD\\\\SpringPractice\\\\react-demo\\\\src\\\\caregiver\\\\components\\\\caregiver-form.js\";\nimport React from 'react';\nimport validate from \"../../caregiver/components/validators/caregiver-validators\";\nimport Button from \"react-bootstrap/Button\";\nimport * as API_USERS from \"../../caregiver/api/caregiver-api\";\nimport APIResponseErrorMessage from \"../../commons/errorhandling/api-response-error-message\";\nimport { Col, Row } from \"reactstrap\";\nimport { FormGroup, Input, Label } from 'reactstrap';\n\nvar CaregiverForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CaregiverForm, _React$Component);\n\n  function CaregiverForm(props) {\n    var _this;\n\n    _classCallCheck(this, CaregiverForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CaregiverForm).call(this, props));\n\n    _this.handleChange = function (event) {\n      var name = event.target.name;\n      var value = event.target.value;\n      var updatedControls = _this.state.formControls;\n      var updatedFormElement = updatedControls[name];\n      updatedFormElement.value = value;\n      updatedFormElement.touched = true;\n      updatedFormElement.valid = validate(value, updatedFormElement.validationRules);\n      updatedControls[name] = updatedFormElement;\n      var formIsValid = true;\n\n      for (var updatedFormElementName in updatedControls) {\n        formIsValid = updatedControls[updatedFormElementName].valid && formIsValid;\n      }\n\n      _this.setState({\n        formControls: updatedControls,\n        formIsValid: formIsValid\n      });\n    };\n\n    _this.toggleForm = _this.toggleForm.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.reloadHandler = _this.props.reloadHandler;\n    _this.state = {\n      errorStatus: 0,\n      error: null,\n      formIsValid: false,\n      formControls: {\n        name: {\n          value: '',\n          placeholder: '',\n          touched: false\n        },\n        date: {\n          value: '',\n          placeholder: '',\n          touched: false\n        },\n        gender: {\n          value: '',\n          placeholder: '',\n          touched: false\n        },\n        address: {\n          value: '',\n          placeholder: '',\n          touched: false\n        }\n      }\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(CaregiverForm, [{\n    key: \"toggleForm\",\n    value: function toggleForm() {\n      this.setState({\n        collapseForm: !this.state.collapseForm\n      });\n    }\n  }, {\n    key: \"registerCaregiver\",\n    value: function registerCaregiver(caregiver) {\n      var _this2 = this;\n\n      return API_USERS.postCaregiver(caregiver, function (result, status, error) {\n        if (result !== null && (status === 200 || status === 201)) {\n          console.log(\"Successfully inserted caregiver with id: \" + result);\n\n          _this2.reloadHandler();\n        } else {\n          _this2.setState({\n            errorStatus: status,\n            error: error\n          });\n        }\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit() {\n      var caregiver = {\n        name: this.state.formControls.name.value,\n        date: this.state.formControls.date.value,\n        gender: this.state.formControls.gender.value,\n        address: this.state.formControls.address.value\n      };\n      console.log(caregiver);\n      this.registerCaregiver(caregiver);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        id: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"nameField\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \" Name: \"), React.createElement(Input, {\n        name: \"name\",\n        id: \"nameField\",\n        placeholder: this.state.formControls.name.placeholder,\n        onChange: this.handleChange,\n        defaultValue: this.state.formControls.name.value,\n        touched: this.state.formControls.name.touched ? 1 : 0,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        id: \"date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"dateField\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \" Birthday: \"), React.createElement(Input, {\n        name: \"date\",\n        id: \"dateField\",\n        placeholder: this.state.formControls.email.placeholder,\n        onChange: this.handleChange,\n        defaultValue: this.state.formControls.email.value,\n        touched: this.state.formControls.email.touched ? 1 : 0,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        id: \"address\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"addressField\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \" Address: \"), React.createElement(Input, {\n        name: \"address\",\n        id: \"addressField\",\n        placeholder: this.state.formControls.address.placeholder,\n        onChange: this.handleChange,\n        defaultValue: this.state.formControls.address.value,\n        touched: this.state.formControls.address.touched ? 1 : 0,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        id: \"gender\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"genderField\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \" Gender: \"), React.createElement(Input, {\n        name: \"gender\",\n        id: \"genderField\",\n        placeholder: this.state.formControls.age.placeholder,\n        min: 0,\n        max: 100,\n        type: \"number\",\n        onChange: this.handleChange,\n        defaultValue: this.state.formControls.age.value,\n        touched: this.state.formControls.age.touched ? 1 : 0,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      })), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: {\n          size: '4',\n          offset: 8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"submit\",\n        disabled: !this.state.formIsValid,\n        onClick: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, \"  Submit \"))));\n    }\n  }]);\n\n  return CaregiverForm;\n}(React.Component);\n\nexport default CaregiverForm;","map":{"version":3,"sources":["C:\\Users\\user\\Desktop\\CSC - anul 2\\SD\\SpringPractice\\react-demo\\src\\caregiver\\components\\caregiver-form.js"],"names":["React","validate","Button","API_USERS","APIResponseErrorMessage","Col","Row","FormGroup","Input","Label","CaregiverForm","props","handleChange","event","name","target","value","updatedControls","state","formControls","updatedFormElement","touched","valid","validationRules","formIsValid","updatedFormElementName","setState","toggleForm","bind","reloadHandler","errorStatus","error","placeholder","date","gender","address","handleSubmit","collapseForm","caregiver","postCaregiver","result","status","console","log","registerCaregiver","email","age","size","offset","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,4DAArB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAO,KAAKC,SAAZ,MAA2B,mCAA3B;AACA,OAAOC,uBAAP,MAAoC,wDAApC;AACA,SAAQC,GAAR,EAAaC,GAAb,QAAuB,YAAvB;AACA,SAASC,SAAT,EAAoBC,KAApB,EAA2BC,KAA3B,QAAuC,YAAvC;;IAIMC,a;;;;;AAEF,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,uFAAMA,KAAN;;AADe,UA6CnBC,YA7CmB,GA6CJ,UAAAC,KAAK,EAAI;AAEpB,UAAMC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAaD,IAA1B;AACA,UAAME,KAAK,GAAGH,KAAK,CAACE,MAAN,CAAaC,KAA3B;AAEA,UAAMC,eAAe,GAAG,MAAKC,KAAL,CAAWC,YAAnC;AAEA,UAAMC,kBAAkB,GAAGH,eAAe,CAACH,IAAD,CAA1C;AAEAM,MAAAA,kBAAkB,CAACJ,KAAnB,GAA2BA,KAA3B;AACAI,MAAAA,kBAAkB,CAACC,OAAnB,GAA6B,IAA7B;AACAD,MAAAA,kBAAkB,CAACE,KAAnB,GAA2BrB,QAAQ,CAACe,KAAD,EAAQI,kBAAkB,CAACG,eAA3B,CAAnC;AACAN,MAAAA,eAAe,CAACH,IAAD,CAAf,GAAwBM,kBAAxB;AAEA,UAAII,WAAW,GAAG,IAAlB;;AACA,WAAK,IAAIC,sBAAT,IAAmCR,eAAnC,EAAoD;AAChDO,QAAAA,WAAW,GAAGP,eAAe,CAACQ,sBAAD,CAAf,CAAwCH,KAAxC,IAAiDE,WAA/D;AACH;;AAED,YAAKE,QAAL,CAAc;AACVP,QAAAA,YAAY,EAAEF,eADJ;AAEVO,QAAAA,WAAW,EAAEA;AAFH,OAAd;AAKH,KArEkB;;AAEf,UAAKG,UAAL,GAAkB,MAAKA,UAAL,CAAgBC,IAAhB,uDAAlB;AACA,UAAKC,aAAL,GAAqB,MAAKlB,KAAL,CAAWkB,aAAhC;AAEA,UAAKX,KAAL,GAAa;AAETY,MAAAA,WAAW,EAAE,CAFJ;AAGTC,MAAAA,KAAK,EAAE,IAHE;AAKTP,MAAAA,WAAW,EAAE,KALJ;AAOTL,MAAAA,YAAY,EAAE;AACVL,QAAAA,IAAI,EAAE;AACFE,UAAAA,KAAK,EAAE,EADL;AAEFgB,UAAAA,WAAW,EAAE,EAFX;AAGFX,UAAAA,OAAO,EAAE;AAHP,SADI;AAMVY,QAAAA,IAAI,EAAE;AACFjB,UAAAA,KAAK,EAAE,EADL;AAEFgB,UAAAA,WAAW,EAAE,EAFX;AAGFX,UAAAA,OAAO,EAAE;AAHP,SANI;AAWVa,QAAAA,MAAM,EAAE;AACJlB,UAAAA,KAAK,EAAE,EADH;AAEJgB,UAAAA,WAAW,EAAE,EAFT;AAGJX,UAAAA,OAAO,EAAE;AAHL,SAXE;AAgBVc,QAAAA,OAAO,EAAE;AACLnB,UAAAA,KAAK,EAAE,EADF;AAELgB,UAAAA,WAAW,EAAE,EAFR;AAGLX,UAAAA,OAAO,EAAE;AAHJ;AAhBC;AAPL,KAAb;AA+BA,UAAKT,YAAL,GAAoB,MAAKA,YAAL,CAAkBgB,IAAlB,uDAApB;AACA,UAAKQ,YAAL,GAAoB,MAAKA,YAAL,CAAkBR,IAAlB,uDAApB;AArCe;AAsClB;;;;iCAEY;AACT,WAAKF,QAAL,CAAc;AAACW,QAAAA,YAAY,EAAE,CAAC,KAAKnB,KAAL,CAAWmB;AAA3B,OAAd;AACH;;;sCA6BiBC,S,EAAW;AAAA;;AACzB,aAAOnC,SAAS,CAACoC,aAAV,CAAwBD,SAAxB,EAAmC,UAACE,MAAD,EAASC,MAAT,EAAiBV,KAAjB,EAA2B;AACjE,YAAIS,MAAM,KAAK,IAAX,KAAoBC,MAAM,KAAK,GAAX,IAAkBA,MAAM,KAAK,GAAjD,CAAJ,EAA2D;AACvDC,UAAAA,OAAO,CAACC,GAAR,CAAY,8CAA8CH,MAA1D;;AACA,UAAA,MAAI,CAACX,aAAL;AACH,SAHD,MAGO;AACH,UAAA,MAAI,CAACH,QAAL,CAAe;AACXI,YAAAA,WAAW,EAAEW,MADF;AAEXV,YAAAA,KAAK,EAAEA;AAFI,WAAf;AAIH;AACJ,OAVM,CAAP;AAWH;;;mCAEc;AACX,UAAIO,SAAS,GAAG;AACZxB,QAAAA,IAAI,EAAE,KAAKI,KAAL,CAAWC,YAAX,CAAwBL,IAAxB,CAA6BE,KADvB;AAEZiB,QAAAA,IAAI,EAAE,KAAKf,KAAL,CAAWC,YAAX,CAAwBc,IAAxB,CAA6BjB,KAFvB;AAGZkB,QAAAA,MAAM,EAAE,KAAKhB,KAAL,CAAWC,YAAX,CAAwBe,MAAxB,CAA+BlB,KAH3B;AAIZmB,QAAAA,OAAO,EAAE,KAAKjB,KAAL,CAAWC,YAAX,CAAwBgB,OAAxB,CAAgCnB;AAJ7B,OAAhB;AAOA0B,MAAAA,OAAO,CAACC,GAAR,CAAYL,SAAZ;AACA,WAAKM,iBAAL,CAAuBN,SAAvB;AACH;;;6BAEQ;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,oBAAC,SAAD;AAAW,QAAA,EAAE,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,GAAG,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC,WAAtB;AAAkC,QAAA,WAAW,EAAE,KAAKpB,KAAL,CAAWC,YAAX,CAAwBL,IAAxB,CAA6BkB,WAA5E;AACO,QAAA,QAAQ,EAAE,KAAKpB,YADtB;AAEO,QAAA,YAAY,EAAE,KAAKM,KAAL,CAAWC,YAAX,CAAwBL,IAAxB,CAA6BE,KAFlD;AAGO,QAAA,OAAO,EAAE,KAAKE,KAAL,CAAWC,YAAX,CAAwBL,IAAxB,CAA6BO,OAA7B,GAAsC,CAAtC,GAA0C,CAH1D;AAIO,QAAA,QAAQ,MAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAFJ,EAaI,oBAAC,SAAD;AAAW,QAAA,EAAE,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,GAAG,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAEI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC,WAAtB;AAAkC,QAAA,WAAW,EAAE,KAAKH,KAAL,CAAWC,YAAX,CAAwB0B,KAAxB,CAA8Bb,WAA7E;AACO,QAAA,QAAQ,EAAE,KAAKpB,YADtB;AAEO,QAAA,YAAY,EAAE,KAAKM,KAAL,CAAWC,YAAX,CAAwB0B,KAAxB,CAA8B7B,KAFnD;AAGO,QAAA,OAAO,EAAE,KAAKE,KAAL,CAAWC,YAAX,CAAwB0B,KAAxB,CAA8BxB,OAA9B,GAAuC,CAAvC,GAA2C,CAH3D;AAIO,QAAA,QAAQ,MAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAbJ,EAwBI,oBAAC,SAAD;AAAW,QAAA,EAAE,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,GAAG,EAAC,cAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,SAAZ;AAAsB,QAAA,EAAE,EAAC,cAAzB;AAAwC,QAAA,WAAW,EAAE,KAAKH,KAAL,CAAWC,YAAX,CAAwBgB,OAAxB,CAAgCH,WAArF;AACO,QAAA,QAAQ,EAAE,KAAKpB,YADtB;AAEO,QAAA,YAAY,EAAE,KAAKM,KAAL,CAAWC,YAAX,CAAwBgB,OAAxB,CAAgCnB,KAFrD;AAGO,QAAA,OAAO,EAAE,KAAKE,KAAL,CAAWC,YAAX,CAAwBgB,OAAxB,CAAgCd,OAAhC,GAAyC,CAAzC,GAA6C,CAH7D;AAIO,QAAA,QAAQ,MAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAxBJ,EAkCI,oBAAC,SAAD;AAAW,QAAA,EAAE,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,GAAG,EAAC,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,EAAE,EAAC,aAAxB;AAAsC,QAAA,WAAW,EAAE,KAAKH,KAAL,CAAWC,YAAX,CAAwB2B,GAAxB,CAA4Bd,WAA/E;AACO,QAAA,GAAG,EAAE,CADZ;AACe,QAAA,GAAG,EAAE,GADpB;AACyB,QAAA,IAAI,EAAC,QAD9B;AAEO,QAAA,QAAQ,EAAE,KAAKpB,YAFtB;AAGO,QAAA,YAAY,EAAE,KAAKM,KAAL,CAAWC,YAAX,CAAwB2B,GAAxB,CAA4B9B,KAHjD;AAIO,QAAA,OAAO,EAAE,KAAKE,KAAL,CAAWC,YAAX,CAAwB2B,GAAxB,CAA4BzB,OAA5B,GAAqC,CAArC,GAAyC,CAJzD;AAKO,QAAA,QAAQ,MALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAlCJ,EA6CQ,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE;AAAC0B,UAAAA,IAAI,EAAE,GAAP;AAAYC,UAAAA,MAAM,EAAE;AAApB,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAE,QAAd;AAAwB,QAAA,QAAQ,EAAE,CAAC,KAAK9B,KAAL,CAAWM,WAA9C;AAA2D,QAAA,OAAO,EAAE,KAAKY,YAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,CADJ,CA7CR,CADJ;AAuDH;;;;EA3JuBpC,KAAK,CAACiD,S;;AA8JlC,eAAevC,aAAf","sourcesContent":["import React from 'react';\r\nimport validate from \"../../caregiver/components/validators/caregiver-validators\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport * as API_USERS from \"../../caregiver/api/caregiver-api\";\r\nimport APIResponseErrorMessage from \"../../commons/errorhandling/api-response-error-message\";\r\nimport {Col, Row} from \"reactstrap\";\r\nimport { FormGroup, Input, Label} from 'reactstrap';\r\n\r\n\r\n\r\nclass CaregiverForm extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.toggleForm = this.toggleForm.bind(this);\r\n        this.reloadHandler = this.props.reloadHandler;\r\n\r\n        this.state = {\r\n\r\n            errorStatus: 0,\r\n            error: null,\r\n\r\n            formIsValid: false,\r\n\r\n            formControls: {\r\n                name: {\r\n                    value: '',\r\n                    placeholder: '',\r\n                    touched: false,\r\n                },\r\n                date: {\r\n                    value: '',\r\n                    placeholder: '',\r\n                    touched: false,\r\n                },\r\n                gender: {\r\n                    value: '',\r\n                    placeholder: '',\r\n                    touched: false,\r\n                },\r\n                address: {\r\n                    value: '',\r\n                    placeholder: '',\r\n                    touched: false,\r\n                },\r\n            }\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    toggleForm() {\r\n        this.setState({collapseForm: !this.state.collapseForm});\r\n    }\r\n\r\n\r\n    handleChange = event => {\r\n\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        const updatedControls = this.state.formControls;\r\n\r\n        const updatedFormElement = updatedControls[name];\r\n\r\n        updatedFormElement.value = value;\r\n        updatedFormElement.touched = true;\r\n        updatedFormElement.valid = validate(value, updatedFormElement.validationRules);\r\n        updatedControls[name] = updatedFormElement;\r\n\r\n        let formIsValid = true;\r\n        for (let updatedFormElementName in updatedControls) {\r\n            formIsValid = updatedControls[updatedFormElementName].valid && formIsValid;\r\n        }\r\n\r\n        this.setState({\r\n            formControls: updatedControls,\r\n            formIsValid: formIsValid\r\n        });\r\n\r\n    };\r\n\r\n    registerCaregiver(caregiver) {\r\n        return API_USERS.postCaregiver(caregiver, (result, status, error) => {\r\n            if (result !== null && (status === 200 || status === 201)) {\r\n                console.log(\"Successfully inserted caregiver with id: \" + result);\r\n                this.reloadHandler();\r\n            } else {\r\n                this.setState(({\r\n                    errorStatus: status,\r\n                    error: error\r\n                }));\r\n            }\r\n        });\r\n    }\r\n\r\n    handleSubmit() {\r\n        let caregiver = {\r\n            name: this.state.formControls.name.value,\r\n            date: this.state.formControls.date.value,\r\n            gender: this.state.formControls.gender.value,\r\n            address: this.state.formControls.address.value\r\n        };\r\n\r\n        console.log(caregiver);\r\n        this.registerCaregiver(caregiver);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n                <FormGroup id='name'>\r\n                    <Label for='nameField'> Name: </Label>\r\n                    <Input name='name' id='nameField' placeholder={this.state.formControls.name.placeholder}\r\n                           onChange={this.handleChange}\r\n                           defaultValue={this.state.formControls.name.value}\r\n                           touched={this.state.formControls.name.touched? 1 : 0}\r\n                           required\r\n                    />\r\n\r\n                </FormGroup>\r\n\r\n                <FormGroup id='date'>\r\n                    <Label for='dateField'> Birthday: </Label>\r\n                    <Input name='date' id='dateField' placeholder={this.state.formControls.email.placeholder}\r\n                           onChange={this.handleChange}\r\n                           defaultValue={this.state.formControls.email.value}\r\n                           touched={this.state.formControls.email.touched? 1 : 0}\r\n                           required\r\n                    />\r\n\r\n                </FormGroup>\r\n\r\n                <FormGroup id='address'>\r\n                    <Label for='addressField'> Address: </Label>\r\n                    <Input name='address' id='addressField' placeholder={this.state.formControls.address.placeholder}\r\n                           onChange={this.handleChange}\r\n                           defaultValue={this.state.formControls.address.value}\r\n                           touched={this.state.formControls.address.touched? 1 : 0}\r\n                           required\r\n                    />\r\n                </FormGroup>\r\n\r\n                <FormGroup id='gender'>\r\n                    <Label for='genderField'> Gender: </Label>\r\n                    <Input name='gender' id='genderField' placeholder={this.state.formControls.age.placeholder}\r\n                           min={0} max={100} type=\"number\"\r\n                           onChange={this.handleChange}\r\n                           defaultValue={this.state.formControls.age.value}\r\n                           touched={this.state.formControls.age.touched? 1 : 0}\r\n                           required\r\n                    />\r\n                </FormGroup>\r\n\r\n                    <Row>\r\n                        <Col sm={{size: '4', offset: 8}}>\r\n                            <Button type={\"submit\"} disabled={!this.state.formIsValid} onClick={this.handleSubmit}>  Submit </Button>\r\n                        </Col>\r\n                    </Row>\r\n\r\n\r\n            </div>\r\n        ) ;\r\n    }\r\n}\r\n\r\nexport default CaregiverForm;\r\n"]},"metadata":{},"sourceType":"module"}