{"ast":null,"code":"function performRequest(request, callback) {\n  try {\n    fetch(request).then(function (response) {\n      if (response.ok) {\n        response.json().then(function (json) {\n          return callback(json, response.status, null);\n        });\n        return \"true\";\n      } else {\n        response.json().then(function (err) {\n          return callback(null, response.status, err);\n        });\n        return \"false\";\n      }\n    }).catch(function (err) {\n      //catch any other unexpected error, and set custom code for error = 1\n      callback(null, 1, err);\n    });\n    return \"altceva\";\n  } catch (_unused) {\n    console.log(\"BAAAAAAAAAAAAAD\");\n  }\n}\n\nmodule.exports = {\n  performRequest: performRequest\n};","map":{"version":3,"sources":["C:\\Users\\user\\Desktop\\CSC - anul 2\\SD\\SpringPractice\\react-demo\\src\\commons\\api\\rest-client.js"],"names":["performRequest","request","callback","fetch","then","response","ok","json","status","err","catch","console","log","module","exports"],"mappings":"AAAA,SAASA,cAAT,CAAwBC,OAAxB,EAAiCC,QAAjC,EAA0C;AACtC,MAAG;AACHC,IAAAA,KAAK,CAACF,OAAD,CAAL,CACKG,IADL,CAEQ,UAASC,QAAT,EAAmB;AACf,UAAIA,QAAQ,CAACC,EAAb,EAAiB;AACbD,QAAAA,QAAQ,CAACE,IAAT,GAAgBH,IAAhB,CAAqB,UAAAG,IAAI;AAAA,iBAAIL,QAAQ,CAACK,IAAD,EAAOF,QAAQ,CAACG,MAAhB,EAAuB,IAAvB,CAAZ;AAAA,SAAzB;AACA,eAAO,MAAP;AACH,OAHD,MAIK;AACDH,QAAAA,QAAQ,CAACE,IAAT,GAAgBH,IAAhB,CAAqB,UAAAK,GAAG;AAAA,iBAAIP,QAAQ,CAAC,IAAD,EAAOG,QAAQ,CAACG,MAAhB,EAAyBC,GAAzB,CAAZ;AAAA,SAAxB;AACA,eAAO,OAAP;AACH;AACJ,KAXT,EAYKC,KAZL,CAYW,UAAUD,GAAV,EAAe;AAClB;AACAP,MAAAA,QAAQ,CAAC,IAAD,EAAO,CAAP,EAAUO,GAAV,CAAR;AACH,KAfL;AAgBA,WAAO,SAAP;AAAkB,GAjBlB,CAkBA,gBAAK;AACDE,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACH;AACJ;;AACDC,MAAM,CAACC,OAAP,GAAiB;AACbd,EAAAA,cAAc,EAAdA;AADa,CAAjB","sourcesContent":["function performRequest(request, callback){\r\n    try{\r\n    fetch(request)\r\n        .then(\r\n            function(response) {\r\n                if (response.ok) {\r\n                    response.json().then(json => callback(json, response.status,null));\r\n                    return \"true\";\r\n                }\r\n                else {\r\n                    response.json().then(err => callback(null, response.status,  err));\r\n                    return \"false\";\r\n                }\r\n            })\r\n        .catch(function (err) {\r\n            //catch any other unexpected error, and set custom code for error = 1\r\n            callback(null, 1, err)\r\n        });\r\n    return \"altceva\";}\r\n    catch{\r\n        console.log(\"BAAAAAAAAAAAAAD\");\r\n    }\r\n}\r\nmodule.exports = {\r\n    performRequest\r\n};\r\n"]},"metadata":{},"sourceType":"module"}