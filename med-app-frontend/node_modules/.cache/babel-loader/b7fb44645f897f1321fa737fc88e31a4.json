{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\user\\\\Desktop\\\\CSC - anul 2\\\\SD\\\\SpringPractice\\\\react-demo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\user\\\\Desktop\\\\CSC - anul 2\\\\SD\\\\SpringPractice\\\\react-demo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\user\\\\Desktop\\\\CSC - anul 2\\\\SD\\\\SpringPractice\\\\react-demo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\user\\\\Desktop\\\\CSC - anul 2\\\\SD\\\\SpringPractice\\\\react-demo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\user\\\\Desktop\\\\CSC - anul 2\\\\SD\\\\SpringPractice\\\\react-demo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\user\\\\Desktop\\\\CSC - anul 2\\\\SD\\\\SpringPractice\\\\react-demo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\CSC - anul 2\\\\SD\\\\SpringPractice\\\\react-demo\\\\src\\\\patient\\\\patient-container.js\";\nimport React from 'react';\nimport APIResponseErrorMessage from \"../commons/errorhandling/api-response-error-message\";\nimport { Button, Card, CardHeader, Col, Modal, ModalBody, ModalHeader, Row } from 'reactstrap';\nimport PatientForm from \"./components/patient-form\";\nimport * as API_USERS from \"./api/patient-api\";\nimport PatientTable from \"./components/patient-table\";\n\nvar PatientContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PatientContainer, _React$Component);\n\n  function PatientContainer(props) {\n    var _this;\n\n    _classCallCheck(this, PatientContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PatientContainer).call(this, props));\n    _this.toggleForm = _this.toggleForm.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.reload = _this.reload.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      selected: false,\n      collapseForm: false,\n      tableData: [],\n      isLoaded: false,\n      errorStatus: 0,\n      error: null\n    };\n    return _this;\n  }\n\n  _createClass(PatientContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchPatients();\n    }\n  }, {\n    key: \"fetchPatients\",\n    value: function fetchPatients() {\n      var _this2 = this;\n\n      return API_USERS.getPatients(function (result, status, err) {\n        if (result !== null && status === 200) {\n          _this2.setState({\n            tableData: result,\n            isLoaded: true\n          });\n        } else {\n          _this2.setState({\n            errorStatus: status,\n            error: err\n          });\n        }\n      });\n    }\n  }, {\n    key: \"toggleForm\",\n    value: function toggleForm() {\n      this.setState({\n        selected: !this.state.selected\n      });\n    }\n  }, {\n    key: \"reload\",\n    value: function reload() {\n      this.setState({\n        isLoaded: false\n      });\n      this.toggleForm();\n      this.fetchPatients();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var data = localStorage.getItem(\"role\");\n\n      if (data === \"0\") {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, React.createElement(CardHeader, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, \" Patient Management \")), React.createElement(Card, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }), React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, React.createElement(Col, {\n          sm: {\n            size: '8',\n            offset: 1\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, React.createElement(Button, {\n          color: \"primary\",\n          onClick: this.toggleForm,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, \"Add Patient \"))), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }), React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, React.createElement(Col, {\n          sm: {\n            size: '8',\n            offset: 1\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, this.state.isLoaded && React.createElement(PatientTable, {\n          tableData: this.state.tableData,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }), this.state.errorStatus > 0 && React.createElement(APIResponseErrorMessage, {\n          errorStatus: this.state.errorStatus,\n          error: this.state.error,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        })))), React.createElement(Modal, {\n          isOpen: this.state.selected,\n          toggle: this.toggleForm,\n          className: this.props.className,\n          size: \"lg\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, React.createElement(ModalHeader, {\n          toggle: this.toggleForm,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, \" Add Patient: \"), React.createElement(ModalBody, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, React.createElement(PatientForm, {\n          reloadHandler: this.reload,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }))));\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, React.createElement(CardHeader, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, \" Patient Management \")), React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }, \"Access not allowed!\"));\n      }\n    }\n  }]);\n\n  return PatientContainer;\n}(React.Component);\n\nexport default PatientContainer;","map":{"version":3,"sources":["C:\\Users\\user\\Desktop\\CSC - anul 2\\SD\\SpringPractice\\react-demo\\src\\patient\\patient-container.js"],"names":["React","APIResponseErrorMessage","Button","Card","CardHeader","Col","Modal","ModalBody","ModalHeader","Row","PatientForm","API_USERS","PatientTable","PatientContainer","props","toggleForm","bind","reload","state","selected","collapseForm","tableData","isLoaded","errorStatus","error","fetchPatients","getPatients","result","status","err","setState","data","localStorage","getItem","size","offset","className","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport APIResponseErrorMessage from \"../commons/errorhandling/api-response-error-message\";\r\nimport {\r\n    Button,\r\n    Card,\r\n    CardHeader,\r\n    Col,\r\n    Modal,\r\n    ModalBody,\r\n    ModalHeader,\r\n    Row\r\n} from 'reactstrap';\r\nimport PatientForm from \"./components/patient-form\";\r\n\r\nimport * as API_USERS from \"./api/patient-api\"\r\nimport PatientTable from \"./components/patient-table\";\r\n\r\n\r\n\r\nclass PatientContainer extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.toggleForm = this.toggleForm.bind(this);\r\n        this.reload = this.reload.bind(this);\r\n        this.state = {\r\n            selected: false,\r\n            collapseForm: false,\r\n            tableData: [],\r\n            isLoaded: false,\r\n            errorStatus: 0,\r\n            error: null\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchPatients();\r\n    }\r\n\r\n    fetchPatients() {\r\n        return API_USERS.getPatients((result, status, err) => {\r\n\r\n            if (result !== null && status === 200) {\r\n                this.setState({\r\n                    tableData: result,\r\n                    isLoaded: true\r\n                });\r\n            } else {\r\n                this.setState(({\r\n                    errorStatus: status,\r\n                    error: err\r\n                }));\r\n            }\r\n        });\r\n    }\r\n\r\n    toggleForm() {\r\n        this.setState({selected: !this.state.selected});\r\n    }\r\n\r\n\r\n    reload() {\r\n        this.setState({\r\n            isLoaded: false\r\n        });\r\n        this.toggleForm();\r\n        this.fetchPatients();\r\n    }\r\n\r\n    render() {\r\n        let data = localStorage.getItem(\"role\");\r\n        if(data === \"0\"){\r\n            return (\r\n                <div>\r\n                    <CardHeader>\r\n                        <strong> Patient Management </strong>\r\n                    </CardHeader>\r\n                    <Card>\r\n                        <br/>\r\n                        <Row>\r\n                            <Col sm={{size: '8', offset: 1}}>\r\n                                <Button color=\"primary\" onClick={this.toggleForm}>Add Patient </Button>\r\n                            </Col>\r\n                        </Row>\r\n                        <br/>\r\n                        <Row>\r\n                            <Col sm={{size: '8', offset: 1}}>\r\n                                {this.state.isLoaded && <PatientTable tableData = {this.state.tableData}/>}\r\n                                {this.state.errorStatus > 0 && <APIResponseErrorMessage\r\n                                                                errorStatus={this.state.errorStatus}\r\n                                                                error={this.state.error}\r\n                                                            />   }\r\n                            </Col>\r\n                        </Row>\r\n                    </Card>\r\n\r\n                    <Modal isOpen={this.state.selected} toggle={this.toggleForm}\r\n                           className={this.props.className} size=\"lg\">\r\n                        <ModalHeader toggle={this.toggleForm}> Add Patient: </ModalHeader>\r\n                        <ModalBody>\r\n                            <PatientForm reloadHandler={this.reload}/>\r\n                        </ModalBody>\r\n                    </Modal>\r\n\r\n                </div>\r\n            )}\r\n        else{\r\n            return (\r\n                <div>\r\n                    <CardHeader>\r\n                        <strong> Patient Management </strong>\r\n                    </CardHeader>\r\n                    <h1>Access not allowed!</h1>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default PatientContainer;\r\n"]},"metadata":{},"sourceType":"module"}