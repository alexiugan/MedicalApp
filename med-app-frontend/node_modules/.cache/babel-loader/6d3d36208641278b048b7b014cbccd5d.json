{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\user\\\\Desktop\\\\CSC - anul 2\\\\SD\\\\SpringPractice\\\\react-demo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\user\\\\Desktop\\\\CSC - anul 2\\\\SD\\\\SpringPractice\\\\react-demo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\user\\\\Desktop\\\\CSC - anul 2\\\\SD\\\\SpringPractice\\\\react-demo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\user\\\\Desktop\\\\CSC - anul 2\\\\SD\\\\SpringPractice\\\\react-demo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\user\\\\Desktop\\\\CSC - anul 2\\\\SD\\\\SpringPractice\\\\react-demo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\user\\\\Desktop\\\\CSC - anul 2\\\\SD\\\\SpringPractice\\\\react-demo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\CSC - anul 2\\\\SD\\\\SpringPractice\\\\react-demo\\\\src\\\\home\\\\home.js\";\nimport React from 'react';\nimport BackgroundImg from '../commons/images/future-medicine.jpg';\nimport { Button, Form, FormGroup, Label, Input, Container, Jumbotron } from 'reactstrap';\nimport { HOST } from \"../commons/hosts\";\nimport RestApiClient from \"../commons/api/rest-client\";\nimport * as API_USERS from \"../person/api/person-api\";\nvar backgroundStyle = {\n  backgroundPosition: 'center',\n  backgroundSize: 'cover',\n  backgroundRepeat: 'no-repeat',\n  width: \"100%\",\n  height: \"1920px\",\n  backgroundImage: \"url(\".concat(BackgroundImg, \")\")\n};\nvar textStyle = {\n  fontSize: \"44px\",\n  color: 'white',\n  textAlign: 'center',\n  borderBottom: \"solid\",\n  borderWidth: \"2px\",\n  borderColor: \"lightgrey\",\n  padding: \"7px\",\n  marginBottom: \"10px\"\n};\nvar loginForm = {\n  borderRadius: \"10px\",\n  width: \"100%\",\n  maxWidth: \"330px\",\n  padding: \"15px\",\n  margin: \"auto\",\n  height: \"23%\",\n  backgroundColor: \"#708090\"\n};\nvar validMsg = {\n  textAlign: 'center',\n  marginBottom: \"5px\",\n  color: \"white\"\n};\nvar invalidMsg = {\n  textAlign: 'center',\n  marginBottom: \"5px\",\n  color: \"red\"\n};\nvar button = {\n  width: \"60%\",\n  marginTop: \"20px\",\n  marginLeft: \"20%\",\n  height: \"35%\",\n  backgroundColor: \"black\"\n};\nvar endpoint = {\n  login: '/users'\n};\n\nvar Home =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Home, _React$Component);\n\n  function Home(props) {\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Home).call(this, props));\n    _this.toggleForm = _this.toggleForm.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      errorStatus: 0,\n      error: null,\n      formControls: {\n        username: {\n          value: '',\n          placeholder: '',\n          touched: false\n        },\n        password: {\n          value: '',\n          placeholder: '',\n          touched: false\n        },\n        validMsg: {\n          value: '',\n          placeholder: '',\n          touched: false\n        },\n        invalidMsg: {\n          value: '',\n          placeholder: '',\n          touched: false\n        }\n      }\n    };\n    _this.updateUsername = _this.updateUsername.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updatePassword = _this.updatePassword.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateMsgGood = _this.updateMsgGood.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateMsgBad = _this.updateMsgBad.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Jumbotron, {\n        fluid: true,\n        style: backgroundStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(Form, {\n        className: \"login-form\",\n        style: loginForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(Container, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"display-3\",\n        style: textStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"Login\"), React.createElement(\"div\", {\n        className: \"message\",\n        style: validMsg,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, this.state.validMsg), React.createElement(\"div\", {\n        className: \"message\",\n        style: invalidMsg,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, this.state.invalidMsg), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"Username\"), React.createElement(Input, {\n        value: this.state.username,\n        onChange: function onChange(evt) {\n          return _this2.updateUsername(evt);\n        },\n        type: \"text\",\n        name: \"username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"Password\"), React.createElement(Input, {\n        value: this.state.password,\n        onChange: function onChange(evt) {\n          return _this2.updatePassword(evt);\n        },\n        type: \"password\",\n        id: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      })), React.createElement(Button, {\n        style: button,\n        onClick: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"Login\"))));\n    }\n  }, {\n    key: \"updateUsername\",\n    value: function updateUsername(evt) {\n      this.setState({\n        username: evt.target.value\n      });\n    }\n  }, {\n    key: \"updatePassword\",\n    value: function updatePassword(evt) {\n      this.setState({\n        password: evt.target.value\n      });\n    }\n  }, {\n    key: \"updateMsgGood\",\n    value: function updateMsgGood(evt) {\n      this.setState({\n        validMsg: \"Login successfull!\",\n        invalidMsg: \"\"\n      });\n    }\n  }, {\n    key: \"updateMsgBad\",\n    value: function updateMsgBad(evt) {\n      this.setState({\n        invalidMsg: \"Invalid username or password!\",\n        validMsg: \"\"\n      });\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit() {\n      var login = {\n        username: this.state.username.for,\n        password: this.state.password\n      };\n      this.checkLogin(login);\n    }\n  }, {\n    key: \"checkLogin\",\n    value: function checkLogin(login) {\n      var _this3 = this;\n\n      return this.sendRequest(login, function (result, status, err) {\n        console.log(status);\n        console.log(\"Result = \" + result);\n\n        if (result !== null && (status === 200 || status === 201)) {\n          _this3.updateMsgGood();\n        } else {\n          console.log(\"There was an error \" + err);\n\n          _this3.updateMsgBad();\n        }\n      });\n    }\n  }, {\n    key: \"sendRequest\",\n    value: function sendRequest(login, callback) {\n      var request = new Request(HOST.backend_api + endpoint.login + \"/login\", {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(login)\n      });\n      console.log(request.url);\n      console.log(login);\n      RestApiClient.performRequest(request, callback, login);\n    }\n  }]);\n\n  return Home;\n}(React.Component);\n\nexport default Home;","map":{"version":3,"sources":["C:\\Users\\user\\Desktop\\CSC - anul 2\\SD\\SpringPractice\\react-demo\\src\\home\\home.js"],"names":["React","BackgroundImg","Button","Form","FormGroup","Label","Input","Container","Jumbotron","HOST","RestApiClient","API_USERS","backgroundStyle","backgroundPosition","backgroundSize","backgroundRepeat","width","height","backgroundImage","textStyle","fontSize","color","textAlign","borderBottom","borderWidth","borderColor","padding","marginBottom","loginForm","borderRadius","maxWidth","margin","backgroundColor","validMsg","invalidMsg","button","marginTop","marginLeft","endpoint","login","Home","props","toggleForm","bind","state","errorStatus","error","formControls","username","value","placeholder","touched","password","updateUsername","updatePassword","updateMsgGood","updateMsgBad","onSubmit","evt","setState","target","for","checkLogin","sendRequest","result","status","err","console","log","callback","request","Request","backend_api","method","headers","body","JSON","stringify","url","performRequest","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport BackgroundImg from '../commons/images/future-medicine.jpg';\r\n\r\nimport {Button, Form, FormGroup, Label, Input, Container, Jumbotron} from 'reactstrap';\r\nimport {HOST} from \"../commons/hosts\";\r\nimport RestApiClient from \"../commons/api/rest-client\";\r\nimport * as API_USERS from \"../person/api/person-api\";\r\n\r\n\r\nconst backgroundStyle = {\r\n    backgroundPosition: 'center',\r\n    backgroundSize: 'cover',\r\n    backgroundRepeat: 'no-repeat',\r\n    width: \"100%\",\r\n    height: \"1920px\",\r\n    backgroundImage: `url(${BackgroundImg})`\r\n};\r\nconst textStyle = {\r\n    fontSize: \"44px\",\r\n    color: 'white',\r\n    textAlign:'center',\r\n    borderBottom: \"solid\",\r\n    borderWidth: \"2px\",\r\n    borderColor: \"lightgrey\",\r\n    padding: \"7px\",\r\n    marginBottom:\"10px\"\r\n};\r\n\r\nconst loginForm = {\r\n    borderRadius: \"10px\",\r\n    width: \"100%\",\r\n    maxWidth: \"330px\",\r\n    padding: \"15px\",\r\n    margin: \"auto\",\r\n    height: \"23%\",\r\n    backgroundColor: \"#708090\"\r\n};\r\n\r\n\r\nconst validMsg = {\r\n    textAlign:'center',\r\n    marginBottom: \"5px\",\r\n    color: \"white\"\r\n};\r\n\r\nconst invalidMsg = {\r\n    textAlign:'center',\r\n    marginBottom: \"5px\",\r\n    color: \"red\"\r\n};\r\n\r\nconst button = {\r\n    width: \"60%\",\r\n    marginTop: \"20px\",\r\n    marginLeft: \"20%\",\r\n    height: \"35%\",\r\n    backgroundColor: \"black\"\r\n};\r\n\r\nconst endpoint = {\r\n    login: '/users'\r\n};\r\n\r\n\r\nclass Home extends React.Component {\r\n\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.toggleForm = this.toggleForm.bind(this);\r\n\r\n\r\n        this.state = {\r\n\r\n            errorStatus: 0,\r\n            error: null,\r\n\r\n\r\n            formControls: {\r\n                username: {\r\n                    value: '',\r\n                    placeholder: '',\r\n                    touched: false,\r\n                },\r\n                password: {\r\n                    value: '',\r\n                    placeholder: '',\r\n                    touched: false\r\n                },\r\n                validMsg: {\r\n                    value: '',\r\n                    placeholder: '',\r\n                    touched: false,\r\n                },\r\n                invalidMsg: {\r\n                    value: '',\r\n                    placeholder: '',\r\n                    touched: false,\r\n                },\r\n            }\r\n        };\r\n\r\n        this.updateUsername = this.updateUsername.bind(this);\r\n        this.updatePassword = this.updatePassword.bind(this);\r\n        this.updateMsgGood = this.updateMsgGood.bind(this);\r\n        this.updateMsgBad = this.updateMsgBad.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Jumbotron fluid style={backgroundStyle}>\r\n                <Form className=\"login-form\" style={loginForm}>\r\n\r\n                    <Container fluid>\r\n                        <h1 className=\"display-3\" style={textStyle}>Login</h1>\r\n                        <div className=\"message\" style={validMsg}>{this.state.validMsg}</div>\r\n                        <div className=\"message\" style={invalidMsg}>{this.state.invalidMsg}</div>\r\n                        <FormGroup>\r\n                            <Label>Username</Label>\r\n                            <Input value={this.state.username} onChange={evt => this.updateUsername(evt)} type={\"text\"} name={\"username\"}/>\r\n                        </FormGroup>\r\n\r\n                        <FormGroup>\r\n                            <Label>Password</Label>\r\n                            <Input value={this.state.password} onChange={evt => this.updatePassword(evt)} type={\"password\"} id={\"password\"}/>\r\n                        </FormGroup>\r\n                        <Button style={button} onClick={this.onSubmit}>Login</Button>\r\n                    </Container>\r\n\r\n\r\n                </Form>\r\n            </Jumbotron>\r\n        )\r\n    };\r\n\r\n    updateUsername(evt) {\r\n        this.setState({\r\n            username: evt.target.value\r\n        });\r\n    }\r\n\r\n    updatePassword(evt) {\r\n        this.setState({\r\n            password: evt.target.value\r\n        });\r\n    }\r\n\r\n    updateMsgGood(evt) {\r\n        this.setState({\r\n            validMsg: \"Login successfull!\",\r\n            invalidMsg: \"\"\r\n        });\r\n    }\r\n\r\n    updateMsgBad(evt) {\r\n        this.setState({\r\n            invalidMsg: \"Invalid username or password!\",\r\n            validMsg: \"\"\r\n        });\r\n    }\r\n\r\n    onSubmit(){\r\n        let login = {\r\n            username: this.state.username.for,\r\n            password: this.state.password\r\n        };\r\n        this.checkLogin(login);\r\n    }\r\n\r\n\r\n    checkLogin(login){\r\n\r\n        return this.sendRequest(login, (result, status, err) => {\r\n            console.log(status);\r\n            console.log(\"Result = \" + result);\r\n            if (result !== null && (status === 200 || status === 201)) {\r\n                this.updateMsgGood();\r\n            } else {\r\n                console.log(\"There was an error \" + err);\r\n                this.updateMsgBad();\r\n            }\r\n        });\r\n    }\r\n\r\n    sendRequest(login, callback){\r\n        let request = new Request(HOST.backend_api + endpoint.login + \"/login\", {\r\n            method: 'POST',\r\n            headers : {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(login)\r\n        });\r\n        console.log(request.url);\r\n        console.log(login);\r\n        RestApiClient.performRequest(request, callback, login);\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Home\r\n"]},"metadata":{},"sourceType":"module"}